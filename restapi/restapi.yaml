openapi: 3.0.1
info:
  title: IAM - IAM HTTP API
  description: The IAM Service HTTP API
  version: v1
servers:
  - url: /IAM-api
paths:
  /api/v1/tenants:
    get:
      tags:
        - tenant
      operationId: "getTenantList"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenantDto'
                nullable: true
    post:
      tags:
        - tenant
      operationId: "postTenant"
      description: Create new Tenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantDto'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
  /api/v1/tenant/{id}:
    get:
      tags:
        - tenant
      operationId: "getTenant"
      description: Get a tenant with the specified id
      parameters:
        - name: id
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
  /api/v1/tenants/{id}:
    put:
      tags:
        - tenant
      operationId: "putTenant"
      description: Update a tenant with the specified id
      parameters:
        - name: id
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
  /api/v1/tenantd/{id}:
    delete:
      tags:
        - tenant
      operationId: "deleteTenant"
      description: Update a tenant with the specified id
      parameters:
        - name: id
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'


  /api/v1/usablerole:
    get:
      tags:
        - usablerole
      operationId: "getUsableRoleList"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsableRoleDto'
                nullable: true
    post:
      tags:
        - usablerole
      operationId: "postUsableRole"
      description: Create new UsableRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsableRoleDto'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsableRoleDto'
  /api/v1/usablerole/{id}:
    get:
      tags:
        - tenant
      operationId: "getUsableRole"
      description: Get a UsableRole with the specified id
      parameters:
        - name: id
          in: path
          description: UsableRole ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsableRoleDto'
  /api/v1/usableroles/{id}:
    put:
      tags:
        - usablerole
      operationId: "putUsableRole"
      description: Update a UsableRole with the specified id
      parameters:
        - name: id
          in: path
          description: UsableRole ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsableRoleDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsableRoleDto'
  /api/v1/usableroled/{id}:
    delete:
      tags:
        - usablerole
      operationId: "deleteUsableRole"
      description: Update a UsableRole with the specified id
      parameters:
        - name: id
          in: path
          description: UsableRole ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsableRoleDto'
components:
  schemas:
    TenantDto:
      required:
        - id
        - tenantName
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        tenantName:
          type: string
          example: 'hanium 2022'
        usableRole:
          type: array
          xml:
            name: UsableRole
            wrapped: true
          items:
            $ref: '#/components/schemas/UsableRoleDto'
        creaetedAt:
          description: Tenant register date/time
          type: string
          format: date-time
          example: '2022-07-28T05:01:43+09:00'
        updatedAt:
          description: Tenant update date/time
          type: string
          format: date-time
          example: '2022-07-28T05:01:43+09:00'
    UsableRoleDto:
      required:
        - id
        - roleName
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        roleName:
          type: string
          example: 'student'
        tenant:
          $ref: '#/components/schemas/TenantDto'
        createdAt:
          description: Role register date/time
          type: string
          example: '2022-07-28T05:01:43+09:00'
        updatedAt:
          description: Role update date/time
          type: string
          example: '2022-07-28T05:01:43+09:00'
